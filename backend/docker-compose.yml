services:
  user-service:
    build:
      context: .
      dockerfile: user_service/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - ENV=dev
      - DATABASE_URL=postgresql+asyncpg://clouduser:cloudpass@postgres:5432/cloud_db
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./user_service:/app/user_service
      - ./alembic:/app/alembic
      - ./alembic/alembic.ini:/app/alembic.ini
  file-service:
    build:
      context: .
      dockerfile: file_service/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - ENV=dev
      - DATABASE_URL=postgresql+asyncpg://clouduser:cloudpass@postgres:5432/cloud_db
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET}
    volumes:
      - ./file_service:/app/file_service
      - ./alembic:/app/alembic
      - ./alembic/alembic.ini:/app/alembic.ini
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    depends_on:
      alembic:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
  gateway:
    build: ./gateway
    ports:
      - "8000:8000"
    environment:
      - ENV=dev
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: clouduser
      POSTGRES_PASSWORD: cloudpass
      POSTGRES_DB: cloud_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: ["postgres", "-c", "shared_preload_libraries=pgcrypto"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clouduser -d cloud_db"]
      interval: 5s
      timeout: 5s
      retries: 10
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
  alembic:
    build:
      context: .
      dockerfile: alembic/Dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://clouduser:cloudpass@postgres:5432/cloud_db
    volumes:
      - ./alembic:/app/alembic
      - ./alembic/alembic.ini:/app/alembic.ini
      - ./user_service/models:/app/user_service/models
      - ./file_service/models:/app/file_service/models
    depends_on:
      postgres:
        condition: service_healthy
    command: ["/app/entrypoint.sh", "alembic"]

volumes:
  pgdata:
  minio-data:
